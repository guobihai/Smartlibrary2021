apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'android-aspectjx'


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        // 阿里路由框架配置
        // 生成的文档路径 : build/generated/source/apt/(debug or release)/com/alibaba/android/arouter/docs/arouter-map-of-${moduleName}.json
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        ndk {
            //支持的SO库架构
            abiFilters 'armeabi-v7a'//, 'armeabi' , 'x86', 'x86_64', 'arm64-v8a'/
        }
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // 生成环境1host
            buildConfigField "String", "BASE_HOST", "\"http://172.16.1.251/gcard/\""
        }

        debug {
            minifyEnabled false

            // 测试环境1host
            buildConfigField "String", "BASE_HOST", "\"http://172.16.1.251/gcard/\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'   // aar目录
        }
    }
    aspectjx {
//        //排除所有package路径中包含`android.support`的class文件及库（jar文件）
//        exclude 'com.taobao'
        exclude 'versions.9'
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'

    implementation "com.google.dagger:hilt-android:2.28-alpha"
//    implementation project(path: ':aliflutterboost')
//    implementation 'com.gcard:flutterboost:1.0.0'

    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

    api rootProject.ext.support["lifecycle-extensions"]
    api rootProject.ext.support["lifecycle-viewmodel"]
    api rootProject.ext.support["constraint-layout"]
    api rootProject.ext.support["appcompat"]
    api rootProject.ext.support["multidex"]

    implementation project(path: ':mylibrary')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    //权限
    implementation "org.permissionsdispatcher:permissionsdispatcher:4.8.0"
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:4.8.0"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.8.0"

    implementation "androidx.viewpager2:viewpager2:1.1.0-alpha01"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    //图片轮播
    implementation 'com.youth.banner:banner:2.1.0'

    api 'org.aspectj:aspectjrt:1.9.5'

    implementation(name: 'flutter-release', ext: 'aar')
    //flutter 相关
//    implementation 'io.flutter:flutter_embedding_release:1.0.0-ae90085a8437c0ae94d6b5ad2741739ebc742cb4'
    implementation 'io.flutter:armeabi_v7a_release:1.0.0-ae90085a8437c0ae94d6b5ad2741739ebc742cb4'
    implementation 'com.github.guobihai:gcard-flutterboost:1.0.0'
}